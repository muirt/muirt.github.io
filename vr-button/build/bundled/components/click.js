var lastFire=0,sensorReadingsList=[],sensorTimesList=[],segmentSize=200,windowSize=2*segmentSize,pressed="not-pressed",clicked="not-clicked";function evaluateDataPointsModel(a){if(!(4>sensorReadingsList.length)){for(var b=sensorReadingsList[sensorReadingsList.length-1],c=0,d=0;d<sensorTimesList.length;d++)if(a-sensorTimesList[d]<segmentSize){c=d;break}if(0!=c){var e=computeOffsets(c,b),f=e.slice(0,c),g=Math.min.apply(null,f),h=e.slice(c,sensorReadingsList.length),i=Math.max.apply(null,h);30>g&&130<i&&(lastFire=a,pressed="pressed")}}}function computeOffsets(a,b){for(var c=[],d=0;d<sensorReadingsList.length;d++){var e=sensorReadingsList[d],f=[e[0]-b[0],e[1]-b[1],e[2]-b[2]],g=Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2]);c.push(g)}return c}function evaluateReadingTimes(a){for(;sensorTimesList[0]<a-windowSize;)sensorTimesList.shift(),sensorReadingsList.shift();a-lastFire<segmentSize||evaluateDataPointsModel(a)}AFRAME.registerComponent("move-on-click",{init:function(){if(this.el.addEventListener("raycaster-intersected",function(){"pressed"==pressed&&("not-clicked"==clicked?(this.el.emit("clicked",null,!1),clicked="clicked"):(this.el.emit("clicked-off",null,!1),clicked="not-clicked"),pressed="not-pressed")}.bind(this)),"Magnetometer"in window){this.magn=new Magnetometer({frequency:10});this.magn.onreading=function(){if("false"!=this.intersection){var a=[this.magn.x,this.magn.y,this.magn.z];sensorReadingsList.push(a);var b=this.magn.timestamp;sensorTimesList.push(b),evaluateReadingTimes(b)}}.bind(this),this.magn.start()}}});